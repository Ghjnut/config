#!/bin/bash

# build go static binary from root of project
gostatic(){
	local dir=$1
	local arg=$2

	if [[ -z $dir ]]; then
		dir=$(pwd)
	fi

	local name=$(basename "$dir")
	(
	cd $dir
	export GOOS=linux
	echo "Building static binary for $name in $dir"

	if [[ $arg = "netgo" ]]; then
		set -x
		go build -a \
			-tags 'netgo static_build' \
			-installsuffix netgo \
			-ldflags "-w" \
			-o "$name" .
	else
		set -x
		CGO_ENABLED=0 go build -a \
			-installsuffix cgo \
			-ldflags "-w" \
			-o "$name" .
	fi
	)
}

# go to a folder easily in your gopath
gogo(){
	local d=$1

	if [[ -z $d ]]; then
		echo "You need to specify a project name."
		return 1
	fi

	if [[ "$d" = github* ]]; then
		d=$(echo $d | sed 's/.*\///')
	fi
	d=${d%/}

	# search for the project dir in the GOPATH
	local path=( `find "${GOPATH}/src" -iname "$d" -type d | awk '{print length, $0;}' | sort -n | awk '{print $2}'` )

	if [ "$path" == "" ] || [ "${path[*]}" == "" ]; then
		echo "Could not find a directory named $d in $GOPATH"
		echo "Maybe you need to 'go get' it ;)"
		return 1
	fi

	# enter the first path found
	cd "${path[0]}"
}

golistdeps(){
	(
	gogo $@

	go list -e -f '{{join .Deps "\n"}}' ./... | xargs go list -e -f '{{if not .Standard}}{{.ImportPath}}{{end}}'
	)
}
